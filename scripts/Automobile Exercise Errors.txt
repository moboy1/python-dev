CODE

#Merge two data frames using following conditions
car_make=df.groupby('company')
fastest_car_for_company=car_make['company','horsepower','price'].max().sort_values(by=['horsepower'], ascending=False)

american_cars=fastest_car_for_company[fastest_car_for_company['company'].isin(['dodge','chevrolet'])]
german_cars=fastest_car_for_company[fastest_car_for_company['company'].isin(['volkswagen','audi','bmw','mercedes-benz','porsche'])]
amergerman_cars=pd.merge(american_cars, german_cars, on="company")

amergerman_cars

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

ERROR

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-78-8faf6ebe1c3d> in <module>
      5 american_cars=fastest_car_for_company[fastest_car_for_company['company'].isin(['dodge','chevrolet'])]
      6 german_cars=fastest_car_for_company[fastest_car_for_company['company'].isin(['volkswagen','audi','bmw','mercedes-benz','porsche'])]
----> 7 amergerman_cars=pd.merge(american_cars, german_cars, on="company")
      8 
      9 amergerman_cars

~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\merge.py in merge(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)
     45                          right_index=right_index, sort=sort, suffixes=suffixes,
     46                          copy=copy, indicator=indicator,
---> 47                          validate=validate)
     48     return op.get_result()
     49 

~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\merge.py in __init__(self, left, right, how, on, left_on, right_on, axis, left_index, right_index, sort, suffixes, copy, indicator, validate)
    527         (self.left_join_keys,
    528          self.right_join_keys,
--> 529          self.join_names) = self._get_merge_keys()
    530 
    531         # validate the merge keys dtypes. We may need to coerce

~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\merge.py in _get_merge_keys(self)
    831                         if rk is not None:
    832                             right_keys.append(
--> 833                                 right._get_label_or_level_values(rk))
    834                         else:
    835                             # work-around for merge_asof(right_index=True)

~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\generic.py in _get_label_or_level_values(self, key, axis)
   1699 
   1700         if self._is_label_reference(key, axis=axis):
-> 1701             self._check_label_or_level_ambiguity(key, axis=axis)
   1702             values = self.xs(key, axis=other_axes[0])._values
   1703         elif self._is_level_reference(key, axis=axis):

~\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\generic.py in _check_label_or_level_ambiguity(self, key, axis)
   1653                             label_article=label_article,
   1654                             label_type=label_type)
-> 1655             raise ValueError(msg)
   1656 
   1657     def _get_label_or_level_values(self, key, axis=0):

ValueError: 'company' is both an index level and a column label, which is ambiguous.
